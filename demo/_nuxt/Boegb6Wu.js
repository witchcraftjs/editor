import{I as p}from"./BEdcXrQg.js";import{aD as v,v as o,x as n,y as c,O as f,A as r,z as g,B as b,a0 as y,N as h,V as x,R as _}from"./Cql2C_go.js";import w from"./sdUFAksv.js";import"./2QWzZFR8.js";import"./DMGTKRWK.js";const S={class:"debug--wrapper text-fg dark:text-bg flex flex-col rounded-sm border border-danger-500 p-2 overflow-auto"},k={class:"debug--header flex justify-between"},C={class:"debug--title font-bold"},D={key:1},N={name:"LibDebug"},V=Object.assign(N,{props:{value:{type:null,required:!1,default:void 0},tab:{type:Number,required:!1,default:3},title:{type:String,required:!1,default:"Debug"}},setup(a){const l=v(),i=a,d=e=>e===void 0?"undefined":typeof e=="string"?e:JSON.stringify(e,null,"	"),u=e=>{let t="";for(const s of e)s.children?typeof s.children=="string"?t+=s.children:t+=u(s.children):t+=`
`;return t},m=()=>{if(navigator.clipboard){const e=i.value?d(i.value):l.default?.()?.[0]?.children?u([...l.default()[0].children]):void 0;if(e===void 0){console.warn("Cannot copy text, can't generate string value from `getStringValue` or `the default slot`.");return}navigator.clipboard.writeText(e).catch(()=>{})}};return(e,t)=>(n(),o("div",S,[c("div",k,[c("span",C,g(a.title),1),r(w,{class:"debug--copy-button w-min-content",onClick:t[0]||(t[0]=s=>m())},{default:b(()=>[r(y,null,{default:b(()=>[r(h(p))]),_:1})]),_:1})]),a.value?(n(),o("pre",{key:0,class:x(`
			debug--value
			[tab-size:${a.tab}]
		`)},g(d(a.value)),3)):f("",!0),a.value===void 0?(n(),o("pre",D,[_(e.$slots,"default")])):f("",!0)]))}}),z=Object.assign(V,{__name:"WDebug"});export{z as default};
